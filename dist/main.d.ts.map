{"mappings":"AAAA,kBAAyB,IAAI,GAAG,IAAI,GAAG,IAAI,CAAA;AAC3C,kBAAyB,IAAI,GAAG,IAAI,GAAG,YAAY,CAAA;AAEnD;IACE,IAAI,CAAC,EAAE,UAAU,CAAA;IACjB,EAAE,CAAC,EAAE,UAAU,CAAA;IACf,WAAW,CAAC,EAAE,OAAO,CAAA;IACrB,KAAK,CAAC,EAAE,OAAO,CAAA;CAChB;AAoCD,iBAAwB,MAAM,CAAA;AAC9B,mBAA0B,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;AAEhD;IACE,WAAW,EAAE,MAAM,GAAG,SAAS,CAAA;IAC/B,IAAI,EAAE,MAAM,CAAA;IACZ,eAAe,EAAE,WAAW,CAAA;CAC7B;AAED;IACE,MAAM,EAAE,MAAM,CAAC;IACf,YAAY,EAAE,WAAW,EAAE,CAAC;IAC5B,IAAI,EAAE,UAAU,CAAA;IAChB,EAAE,EAAE,UAAU,CAAA;CACf;AOjDD,2BAA2B,KAAK,SAAK,EAAE,QAAQ,GAAE,WAAgB,mBAWhE","sources":["src/src/types.ts","src/src/langs/_shared.ts","src/src/langs/belarusian.ts","src/src/langs/russian.ts","src/src/langs/ukrainian.ts","src/src/helpers.ts","src/src/transkribator.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,"import { be } from \"./langs/belarusian\"\nimport { ru } from \"./langs/russian\"\nimport { uk } from \"./langs/ukrainian\"\nimport { Transkribator } from \"./transkribator\"\nimport { Options, UserOptions, Result } from \"./types\"\n\nconst DEFS = [...be, ...ru, ...uk]\nconst DEFAULT_OPTIONS: Options = { from: \"ru\", to: \"en\", showDetails: false }\n\nexport function transcribe(input = \"\", _options: UserOptions = {}) {\n  const options = { ...DEFAULT_OPTIONS, ..._options }\n  const { from, to, showDetails, debug } = options\n  const langDef = DEFS.find((d) => d.from === from && d.to === to)\n  if (!langDef) {\n    console.error(`No language module ${from}-${to} found`)\n    const result: Result = { output: input, appliedRules: [], from, to }\n    return showDetails ? result : result.output\n  }\n  const result: Result = new Transkribator(langDef, !!debug).transcribe(input)\n  return showDetails ? result : result.output\n}\n"],"names":[],"version":3,"file":"main.d.ts.map","sourceRoot":"../"}